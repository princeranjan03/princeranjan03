Exp 6 
3:8 decoder 

`timescale 1ns / 1ps

module Decoder_DF(
    input A,
    input B,
    input C,
    output I0,
    output I1,
    output I2,
    output I3,
    output I4,
    output I5,
    output I6,
    output I7
    );
    
    
    
        assign I0 = (~A)&(~B)&(~C);
        assign I1 = (~A)&(~B)&(C);
        assign I2 = (~A)&(B) &(~C);
        assign I3 = (~A)&(B) &(C);
        assign I4 = (A) &(~B)&(~C);
        assign I5 = (A) &(~B)&(C);
        assign I6 = (A) &(B) &(~C);
        assign I7 = (A) &(B) &(C);
        
    
    
endmodule


TB :

`timescale 1ns / 1ps


module Decoder_DF_tb();

   reg A,B,C;
   wire I0,I1,I2,I3,I4,I5,I6,I7;
   
    Decoder_DF uut(A,B,C,I0,I1,I2,I3,I4,I5,I6,I7);
    
   initial begin
   
        A=0;B=0;C=0;
    #10 A=0;B=0;C=1;   
    #10 A=0;B=1;C=0;  
    #10 A=0;B=1;C=1;  
    #10 A=1;B=0;C=0;  
    #10 A=1;B=0;C=1;  
    #10 A=1;B=1;C=0;  
    #10 A=1;B=1;C=1;  
    #10 $finish; 
   
   end
endmodule




Behaviour :

`timescale 1ns / 1ps

module decoder(
    input A,
    input B,
    input C,
    output reg I0,
    output reg I1,
    output reg I2,
    output reg I3,
    output reg I4,
    output reg I5,
    output reg I6,
    output reg I7
    );
    
    
    always @ *
    begin
    
        if (A==0 && B==0 && C==0)
           begin
               I0=1; 
               I1=0;
               I2=0;
               I3=0;
               I4=0;
               I5=0;
               I6=0;
               I7=0;
            end
        else if (A==0 && B==0 && C==1)
            begin
               I0=0; 
               I1=1;
               I2=0;
               I3=0;
               I4=0;
               I5=0;
               I6=0;
               I7=0;
            end
        else if (A==0 && B==1 && C==0)
                        begin
              I0=0; 
              I1=0;
              I2=1;
              I3=0;
              I4=0;
              I5=0;
              I6=0;
              I7=0;
           end
       else if (A==0 && B==1 && C==1)
                       begin
              I0=0; 
              I1=0;
              I2=0;
              I3=1;
              I4=0;
              I5=0;
              I6=0;
              I7=0;
           end    
       else if (A==1 && B==0 && C==0)
          begin
             I0=0; 
             I1=0;
             I2=0;
             I3=0;
             I4=1;
             I5=0;
             I6=0;
             I7=0;
           end
      else if (A==1 && B==0 && C==1)
           begin
             I0=0; 
             I1=0;
             I2=0;
             I3=0;
             I4=0;
             I5=1;
             I6=0;
             I7=0;
           end
      else if (A==1 && B==1 && C==0)
           begin
              I0=0; 
              I1=0;
              I2=0;
              I3=0;
              I4=0;
              I5=0;
              I6=1;
              I7=0;
          end
     else if (A==1 && B==1 && C==1)
          begin
             I0=0; 
             I1=0;
             I2=0;
             I3=0;
             I4=0;
             I5=0;
             I6=0;
             I7=1;
          end

    end
endmodule
