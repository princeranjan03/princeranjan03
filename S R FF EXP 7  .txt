EXP 7 : S R FF

`timescale 1ns / 1ps

module SR_FF(
    input C,
    input R,
    input S,
    inout s,
    inout r,
    output  Q,
    output q
);

    assign r = ~(R & C);
    assign s = ~(S & C);
    
    assign Q = ~(s & q);  
    assign q = ~(r & Q);
    
endmodule


TB : 

`timescale 1ns / 1ps

module SR_FF_tb();

    reg  S,R,C;
    wire s,r,Q,q;
    
    SR_FF uut(C,R,S,s,r,Q,q);
    `timescale 1ns / 1ps

module SR_FF_beh(
    input S,
    input R,
    input C,
    output reg Q,
    output reg q
);

always @ (posedge C)
begin
    case({S,R})
        2'b01 : begin
            Q <= 0;
            q <= 1;
        end
        2'b00 : begin
            Q <= Q;
            q <= q;
        end
        2'b10 : begin
            Q <= 1;
            q <= 0;
        end
        2'b11 : begin
            Q <= 0;
            q <= 0;
        end
    endcase
end

endmodule

    initial begin 
        C = 0; S = 0; R = 0; 
        #5 C = 1; S = 0; R = 1;
        #5 C = 1; S = 0; R = 0;
        #5 C = 1; S = 1; R = 0;
        #5 C = 1; S = 1; R = 1;
        #5 $finish;
    end

endmodule


Behaviorual : 

