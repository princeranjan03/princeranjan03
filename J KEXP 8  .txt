EXP 8 : 

J K  FF

module JK_FF_DF(
    input C,
    input J,
    input K,
    output wire Q,
    output wire q
);

   
   assign Q = (J & ~K) ? 1 :
               (~J & K) ? 0 :
               (J & K)  ? ~Q :
               Q;

    assign q = ~Q;

endmodule


TB : 

module SR_FF_tb();

reg  J,K,C;
wire Q,q;

JK_FF uut(J, K, C, Q, q);

initial begin
    C = 0; J = 0; K = 0;
    #5 C = 1; J = 0; K = 1;
    #5 C = 1; J = 0; K = 0;
    #5 C = 1; J = 1; K = 0;
    #5 C = 1; J = 1; K = 1;
    #5 $finish;
end

always #1 C = ~C; // Toggle clock every time unit

endmodule


Behavioural : 

`timescale 1ns / 1ps

module JK_FF(
    input J,
    input K,
    input C,
    output reg Q,
    output reg q
);

always @ (posedge C)
begin
    case({J,K})
        2'b01 : begin
            Q <= 0;
            q <= 1;
        end
        2'b00 : begin
            Q <= Q;
            q <= q;
        end
        2'b10 : begin
            Q <= 1;
            q <= 0;
        end
        2'b11 : begin
            Q <= ~Q;
            q <= ~q;
        end
    endcase
end

endmodule
